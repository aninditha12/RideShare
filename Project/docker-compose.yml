version: '3.1'

services:
  rabbit:
    image: rabbitmq:3.8.3-alpine
  zoo:
    container_name: "zookeeper"
    image: zookeeper
    restart: on-failure
    hostname: zoo
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181

  master:
    container_name: "master"
    build:
        context: .
        dockerfile: Dockerfile
    environment:
        - WORKER=master
    command: sh -c "sleep 15 && python3 worker.py"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /usr/bin/docker:/usr/bin/docker
        - masterdb:/code
    links:
        - rabbit
        - zoo
    depends_on:
        - rabbit
        - zoo
    restart: on-failure

  slave:
#    container_name: "slave"
    build:
        context: .
        dockerfile: Dockerfile
    environment:
        - WORKER=slave
    command: sh -c "sleep 20 && python3 worker.py"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - workerdb:/code
    links:
        - rabbit
        - zoo
    depends_on:
        - rabbit
        - zoo
    restart: on-failure


  orchestrator:
    container_name: "orchestrator"
    build:
        context: .
        dockerfile: Dockerfile
    ports:
        - "80:5000"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /usr/bin/docker:/usr/bin/docker
        - .:/code
    command: sh -c "sleep 25 && python3 orch.py"
    links:
        - rabbit
        - zoo
    depends_on:
        - rabbit
        - zoo
    restart: on-failure
    
volumes:
  workerdb:
  masterdb:
